{"ast":null,"code":"var _jsxFileName = \"/home/bena/dev/calendartemp/src/components/EventForm/EventForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventForm = props => {\n  _s();\n\n  const [ime, setIme] = useState('');\n  const [startTime, setStartTime] = useState();\n  const [predmet, setPredmet] = useState('');\n\n  const onIme = e => setIme(e.target.value);\n\n  const onStartTime = e => setStartTime(new Date(e.target.value));\n\n  const onPredmet = e => setPredmet(e.target.value);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!predmet) {\n      alert('Odaberi predmet!');\n      return;\n    }\n\n    const newEvent = {\n      start: startTime,\n      student: ime,\n      class: predmet,\n      title: `[${predmet.toUpperCase()}] ${ime}`,\n      end: new Date(startTime.getTime() + 60000 * 90),\n      placeno: false\n    };\n    props.onEventForm(newEvent);\n    props.onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"modalForm\",\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"datetime-local\",\n        onChange: onStartTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Predmet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        required: true,\n        name: \"Predmet\",\n        id: \"Predmet\",\n        onChange: onPredmet,\n        value: predmet,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: null,\n          children: \"Odaberi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"eng\",\n          children: \"Engleski\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mat\",\n          children: \"Matematika\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"fiz\",\n          children: \"Fizika\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Ucenik\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          list: \"ucenik\",\n          name: \"ucenik\",\n          onChange: onIme,\n          value: ime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"ucenik\",\n        children: props.users.map(ucenik => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ucenik.name\n        }, ucenik.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary\",\n        type: \"submit\",\n        children: \"Dodaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"secondary\",\n        onClick: props.onClose,\n        children: \"Odustani\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n\n_s(EventForm, \"QcoyIObmZi7nM3PW0dvP/7roFHM=\");\n\n_c = EventForm;\nexport default EventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"sources":["/home/bena/dev/calendartemp/src/components/EventForm/EventForm.js"],"names":["React","useState","EventForm","props","ime","setIme","startTime","setStartTime","predmet","setPredmet","onIme","e","target","value","onStartTime","Date","onPredmet","submitHandler","preventDefault","alert","newEvent","start","student","class","title","toUpperCase","end","getTime","placeno","onEventForm","onClose","users","map","ucenik","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;;AACA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,KAAK,GAAGC,CAAC,IAAIN,MAAM,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzB;;AACA,QAAMC,WAAW,GAAGH,CAAC,IAAIJ,YAAY,CAAC,IAAIQ,IAAJ,CAASJ,CAAC,CAACC,MAAF,CAASC,KAAlB,CAAD,CAArC;;AACA,QAAMG,SAAS,GAAGL,CAAC,IAAIF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;;AAEA,QAAMI,aAAa,GAAGN,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACO,cAAF;;AACA,QAAG,CAACV,OAAJ,EAAa;AAACW,MAAAA,KAAK,CAAC,kBAAD,CAAL;AAA2B;AAAO;;AAChD,UAAMC,QAAQ,GAAG;AACbC,MAAAA,KAAK,EAAEf,SADM;AAEbgB,MAAAA,OAAO,EAAElB,GAFI;AAGbmB,MAAAA,KAAK,EAAEf,OAHM;AAIbgB,MAAAA,KAAK,EAAG,IAAGhB,OAAO,CAACiB,WAAR,EAAsB,KAAIrB,GAAI,EAJ5B;AAKbsB,MAAAA,GAAG,EAAE,IAAIX,IAAJ,CAAST,SAAS,CAACqB,OAAV,KAAsB,QAAM,EAArC,CALQ;AAMbC,MAAAA,OAAO,EAAE;AANI,KAAjB;AAQAzB,IAAAA,KAAK,CAAC0B,WAAN,CAAkBT,QAAlB;AACAjB,IAAAA,KAAK,CAAC2B,OAAN;AACH,GAbD;;AAgBA,sBAAO;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEb,aAAtC;AAAA,4BACH;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,IAAI,EAAC,gBAArB;AAAsC,QAAA,QAAQ,EAAEH;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAKH;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,QAAQ,MADZ;AACa,QAAA,IAAI,EAAC,SADlB;AAEI,QAAA,EAAE,EAAC,SAFP;AAGI,QAAA,QAAQ,EAAEE,SAHd;AAII,QAAA,KAAK,EAAER,OAJX;AAAA,gCAKI;AAAQ,UAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALG,eAkBH;AAAA,8BACI;AAAA,0CACA;AAAO,UAAA,QAAQ,MAAf;AAAgB,UAAA,IAAI,EAAC,QAArB;AAA8B,UAAA,IAAI,EAAC,QAAnC;AAA4C,UAAA,QAAQ,EAAEE,KAAtD;AAA6D,UAAA,KAAK,EAAEN;AAApE;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA,kBACCD,KAAK,CAAC4B,KAAN,CAAYC,GAAZ,CAAgBC,MAAM,iBAAI;AAAwB,UAAA,KAAK,EAAEA,MAAM,CAACC;AAAtC,WAAaD,MAAM,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,gBAA1B;AADD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBG,eA0BH;AAAA,8BACA;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEhC,KAAK,CAAC2B,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA+BH,CAxDD;;GAAM5B,S;;KAAAA,S;AA0DN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport './Form.css'\nconst EventForm = props => {\n    const [ime, setIme] = useState('')\n    const [startTime, setStartTime] = useState()\n    const [predmet, setPredmet] = useState('')\n\n    const onIme = e => setIme(e.target.value)\n    const onStartTime = e => setStartTime(new Date(e.target.value))\n    const onPredmet = e => setPredmet(e.target.value)\n\n    const submitHandler = e => {\n        e.preventDefault()\n        if(!predmet) {alert('Odaberi predmet!'); return}\n        const newEvent = {\n            start: startTime,\n            student: ime,\n            class: predmet,\n            title: `[${predmet.toUpperCase()}] ${ime}`,\n            end: new Date(startTime.getTime() + 60000*90),\n            placeno: false\n        }\n        props.onEventForm(newEvent)\n        props.onClose()\n    }\n\n\n    return <form className=\"modalForm\" onSubmit={submitHandler} >\n        <div>\n            <label>Start</label>\n            <input required type=\"datetime-local\" onChange={onStartTime}/>\n        </div>\n        <div>\n            <label>Predmet</label>\n            <select \n                required name=\"Predmet\"\n                id=\"Predmet\"\n                onChange={onPredmet} \n                value={predmet}>\n                <option value={null}>Odaberi</option>\n                <option value=\"eng\">Engleski</option>\n                <option value=\"mat\">Matematika</option>\n                <option value=\"fiz\">Fizika</option>\n            </select>\n        </div>\n        <div>\n            <label>Ucenik\n            <input required list=\"ucenik\" name=\"ucenik\" onChange={onIme} value={ime} />\n            </label>\n            <datalist id=\"ucenik\">\n            {props.users.map(ucenik => <option key={ucenik.id} value={ucenik.name}/>)}\n            </datalist>\n        </div>\n        <div>\n        <button className=\"primary\" type=\"submit\">Dodaj</button>\n        <button className=\"secondary\" onClick={props.onClose}>Odustani</button>\n        </div>\n    </form>\n}\n\nexport default EventForm"]},"metadata":{},"sourceType":"module"}